<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean id="springBean" class="spring.SpringBean">
        <property name="name" value="yaosheng"/>
        <property name="age" value="24"/>
    </bean>

    <!--配置aop中切面类和实现类-->
    <bean id="aspect" class="spring.aop.Aspect"></bean>
    <bean id="aspectImpl" class="spring.aop.AspectImpl"></bean>
    <!--配置aop-->
    <aop:config>
        <aop:aspect id="AspectAOP" ref="aspect"> <!-- 切入类 -->
            <!-- expression切入点(可以配置单个方法，或者是所有方法，目前是这个类中所有的方法) -->
            <aop:pointcut id="pointcut" expression="execution(* spring.aop.AspectImpl.*(..))"></aop:pointcut>
            <!-- 前置通知:执行实现类中方法前，执行此方法  -->
            <aop:before method="before" pointcut-ref="pointcut"></aop:before>
            <!-- 后置通知:执行实现类中方法并返回后，执行此方法，有异常则不执行   -->
            <aop:after-returning method="afterReturning" pointcut-ref="pointcut"></aop:after-returning>
            <!-- 后置通知:在方法全部结束后，才执行此方法，晚于after-returning 有异常也会执行-->
            <aop:after method="after" pointcut-ref="pointcut"></aop:after>
            <!-- 执行实现类中方法出现异常时，执行此方法 -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut"></aop:after-throwing>
        </aop:aspect>

    </aop:config>
</beans>